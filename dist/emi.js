!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).Emi={})}(this,(function(e){"use strict";function t(e,t){let i=e.get(t);return i||(i=new s,e.set(t,i)),i}class s{idMap;fnMap;onceList;emitList;constructor(){this.idMap=new Map,this.fnMap=new Map,this.onceList=new Set,this.emitList=null}add(e,t){let s=this.fnMap.get(e);s||(s=new Set,this.fnMap.set(e,s));const i=Symbol();return s.add(i),this.idMap.set(i,e),t&&this.onceList.add(i),this.emitList&&this.emitList.push(e),i}delId(e){if(!this.idMap.has(e))return;const t=this.idMap.get(e),s=this.fnMap.get(t);this.onceList.delete(e),this.idMap.delete(e),s.delete(e),s.size||this.fnMap.delete(t),this.emitList=null}delFn(e){const t=this.fnMap.get(e);if(t){for(const e of t)this.onceList.delete(e),this.idMap.delete(e);this.fnMap.delete(e),this.emitList=null}}}function i(e,t){let s=e.get(t);return s||(s={list:new Set,onceList:new Set,emitList:null},e.set(t,s)),s}e.Emitter=class{_events;constructor(){this._events=new Map}on(e,s){return t(this._events,e).add(s)}once(e,s){return t(this._events,e).add(s,!0)}off(e,t){if(void 0===e)return void this._events.clear();if(void 0===t)return void this._events.delete(e);const s=this._events.get(e);s&&("function"==typeof t?s.delFn(t):s.delId(t),s.idMap.size||this._events.delete(e))}emit(e,...t){const s=this._events.get(e);if(!s)return;const{idMap:i,onceList:n}=s;if(!i.size)return;const o=s.emitList||[...i.values()];if(n.size)if(n.size===i.size)this._events.delete(e);else for(const e of n)s.delId(e);else s.emitList=o;let d=0,l=o.length;for(;d<l;d++)o[d](...t)}},e.UniqueEmitter=class{_events;constructor(){this._events=new Map}on(e,t){const{list:s,emitList:n}=i(this._events,e);return s.has(t)||(s.add(t),n&&n.push(t)),t}once(e,t){const{list:s,onceList:n,emitList:o}=i(this._events,e);return s.has(t)||(s.add(t),n.add(t),o&&o.push(t)),t}off(e,t){if(void 0===e)return void this._events.clear();if(void 0===t)return void this._events.delete(e);const s=this._events.get(e);s&&s.list.has(t)&&(s.list.delete(t),s.onceList.delete(t),s.emitList=null,s.list.size||this._events.delete(e))}emit(e,...t){const s=this._events.get(e);if(!s)return;const{list:i,onceList:n,emitList:o}=s;if(!i.size)return;const d=o||[...i];if(n.size)if(n.size===i.size)this._events.delete(e);else{for(const e of n)i.delete(e);n.clear(),s.emitList=null}else s.emitList=d;let l=0,r=d.length;for(;l<r;l++)d[l](...t)}},Object.defineProperty(e,"__esModule",{value:!0})}));