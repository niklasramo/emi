var a={APPEND:"append",UPDATE:"update",IGNORE:"ignore",THROW:"throw"};function p(r,e){let n=r.get(e);return n||(n=new o,r.set(e,n)),n}var o=class{constructor(){this.idMap=new Map,this.fnMap=new Map,this.onceList=new Set,this.emitList=null}add(e,n,t,i,s){if(!s&&this.fnMap.has(e))throw new Error("Emitter: tried to add an existing event listener to an event!");if(this.idMap.has(t))switch(i){case a.THROW:throw new Error("Emitter: tried to add an existing event listener id to an event!");case a.IGNORE:return t;default:this.delId(t,i===a.UPDATE)}let d=this.fnMap.get(e);return d||(d=new Set,this.fnMap.set(e,d)),d.add(t),this.idMap.set(t,e),n&&this.onceList.add(t),this.emitList&&this.emitList.push(e),t}delId(e,n=!1){let t=this.idMap.get(e);if(!t)return;let i=this.fnMap.get(t);n||this.idMap.delete(e),this.onceList.delete(e),i.delete(e),i.size||this.fnMap.delete(t),this.emitList=null}delFn(e){let n=this.fnMap.get(e);n&&(n.forEach(t=>{this.onceList.delete(t),this.idMap.delete(t)}),this.fnMap.delete(e),this.emitList=null)}},l=class{constructor(e={}){let{idDedupeMode:n=a.APPEND,allowDuplicateListeners:t=!0}=e;this.idDedupeMode=n,this.allowDuplicateListeners=t,this._events=new Map}_getListeners(e){let n=this._events.get(e);if(!n)return null;let{idMap:t,onceList:i}=n;if(!t.size)return null;let s=n.emitList||[...t.values()];if(i.size)if(i.size===t.size)this._events.delete(e);else for(let d of i)n.delId(d);else n.emitList=s;return s}on(e,n,t=Symbol()){return p(this._events,e).add(n,!1,t,this.idDedupeMode,this.allowDuplicateListeners)}once(e,n,t=Symbol()){return p(this._events,e).add(n,!0,t,this.idDedupeMode,this.allowDuplicateListeners)}off(e,n){if(e===void 0){this._events.clear();return}if(n===void 0){this._events.delete(e);return}let t=this._events.get(e);t&&(typeof n=="function"?t.delFn(n):t.delId(n),t.idMap.size||this._events.delete(e))}emit(e,...n){let t=this._getListeners(e);if(!t)return;let i=0,s=t.length;for(;i<s;i++)t[i](...n)}listenerCount(e){if(e===void 0){let n=0;return this._events.forEach((t,i)=>{n+=this.listenerCount(i)}),n}return this._events.get(e)?.idMap.size||0}};export{l as Emitter,a as EmitterIdDedupeMode};
